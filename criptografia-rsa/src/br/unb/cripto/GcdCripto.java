package br.unb.cripto;

import java.math.BigInteger;

public class GcdCripto {
	
	public static void main(String[] args){
		
		BigInteger big1;
		BigInteger big2;
		
		big1 = new BigInteger("800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000800000000000000000000000000000000000000000000");
		big2 = new BigInteger("600000000000000000000000000000000000");
		
		System.out.println( big1.gcd(big2) );
		System.out.println( gcdEuclides(big1, big2) );
	}
	
	public static BigInteger gcdEuclides(BigInteger a, BigInteger b){
		
		BigInteger mod = a.mod(b);
		
		if( mod.equals(BigInteger.ZERO) ){
			return b;
		}
		
		return gcdEuclides(b, mod);
	}

}
